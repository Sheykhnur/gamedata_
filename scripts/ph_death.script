--[[ ----------------------------------------------------------------------------------------------
 File       : ph_death.script
 Description: Схема: "Physics death checker"
 Copyright  : 2004 © GSC Game World
 Author     : Tunduk Vladimir aka Sidorovich
 Last edit  : 27.07.2013 [...]
--]] ----------------------------------------------------------------------------------------------

--/ -----------------------------------------------------------------
--/ VARIABLEs
--/ -----------------------------------------------------------------
local sModule = script_name()
--/ -----------------------------------------------------------------
local log = function(fmt,...) _G.log(sModule..":"..tostring(fmt),...) end
--/ -----------------------------------------------------------------
--/ CONSTRUCTION SCHEME
--/ -----------------------------------------------------------------------------------------------
class "ph_on_death"
--/ -----------------------------------------------------------------------------------------------
function ph_on_death:__init(obj, st)
	self.object = obj
	self.st     = st
	self.log    = st.log
end
--/------------------------------------------------------------------
--/ RESET SCHEME
--/------------------------------------------------------------------
function ph_on_death:reset_scheme()
	if self.log then log("reset_scheme:Obj=[%s]", self.object:name(), "") end --/#~#
end
--/------------------------------------------------------------------
--/ UPDATE
--/------------------------------------------------------------------
function ph_on_death:update(delta)
end
--/------------------------------------------------------------------
--/ CALLBACKs
--/------------------------------------------------------------------
function ph_on_death:death_callback(obj, who) --/ who => ???
	if self.log then log("death_callback:Obj=[%s],Who=[%s]", obj and obj.name and obj:name(), who and who.name and who:name(), "") end --/#~#
	if db.storage[self.object:id()] and db.storage[self.object:id()].active_scheme then
		xr_logic.try_switch_to_another_section(obj, self.st, db.actor)
	end
end

--/ -----------------------------------------------------------------
--/ BINDER
--/ -----------------------------------------------------------------
function add_to_binder(obj, ini, scheme, section, st)
--	log("add_to_binder:Obj=[%s],scheme=[%s],section=[%s]:(%s)", obj:name(), scheme, section, ">") --/#~#
	st.action = this.ph_on_death(obj, st)
	--/ регистрация action, для вызова метода 'reset_scheme' при изменении настроек схемы:
	xr_logic.subscribe_action_for_events (obj, st, st.action)
end
--/------------------------------------------------------------------
--/ SET SCHEME
--/------------------------------------------------------------------
function set_scheme(obj, ini, scheme, section, gulag_name)
	local st = xr_logic.assign_storage_and_bind(obj, ini, scheme, section)
	st.logic = xr_logic.cfg_get_switch_conditions(ini, section, obj)
	--/ fot debug:
	if st.log then log("set_scheme:Obj=[%s/%s],scheme=[%s],section=[%s]", obj:name(), obj:id(), scheme, section, "") end --/#~#
end

function disable_scheme(obj, scheme)
	--obj:set_callback(callback.death, nil)
end
--/ -----------------------------------------------------------------------------------------------