--[[ ----------------------------------------------------------------------------------------------
 File       : mob_combat.script
 Description: Ñõåìà: "Mob combat"
 Copyright  : 2004 © GSC Game World
 Author     : Andrey Fidrya (Zmey) af@svitonline.com
 Editors    : 
 Last edit  : 08.07.2013 [...]
--]] ----------------------------------------------------------------------------------------------

--/ ------------------------------------------------------------------
--/ VARIABLEs
--/ ------------------------------------------------------------------
local sModule = script_name()
--/ ------------------------------------------------------------------
local log = function(fmt, ...) _G.log(sModule..":"..tostring(fmt), ...) end
--/ ------------------------------------------------------------------
--/ CONSTRUCTION SCHEME
--/ -----------------------------------------------------------------------------------------------
class "mob_combat"
--/ -----------------------------------------------------------------------------------------------
function mob_combat:__init(npc, st)
	self.object = npc
	self.st     = st
	self.log    = st.log
end
--/------------------------------------------------------------------
--/ UPDATE
--/------------------------------------------------------------------
function mob_combat:update(delta)
	xr_logic.try_switch_to_another_section(self.object, self.st, db.actor)
end
--/------------------------------------------------------------------
--/ CALLBACKs
--/------------------------------------------------------------------
function mob_combat:combat_callback()
	if self.st.enabled and self.object:get_enemy() then
		local stor = db.storage[self.object:id()]
		if stor and stor.active_scheme then
			if st.log then log("combat_callback:obj=[%s]", self.object:name(), "") end --/#~#
			xr_logic.try_switch_to_another_section(self.object, self.st, db.actor)
		end
	end
end
--/ -----------------------------------------------------------------------------------------------
--/ BINDER
--/ -----------------------------------------------------------------------------------------------
function add_to_binder(npc, ini, scheme, section, st)
--	log("add_to_binder:Mob=[%s],scheme=[%s],section=[%s]:(%s)", npc:name(), scheme, section, ">")
	st.action = this.mob_combat(npc, st)
	--/ registration action, for a call of method 'callback' in case of change of settings of the scheme
	xr_logic.subscribe_action_for_events(npc, st, st.action)
	--/ fot debug:
	if st.log then log("add_to_binder: Mob=[%s],scheme=[%s],section=[%s]:(%s)", npc:name(), scheme, section, "+") end --/#~#
end
--/------------------------------------------------------------------
--/ SET SCHEME
--/------------------------------------------------------------------
function set_scheme(npc, ini, scheme, section, gulag_name)
	local st = xr_logic.assign_storage_and_bind(npc, ini, scheme, section)
	st.logic = xr_logic.cfg_get_switch_conditions(ini, section, npc)
	st.enabled = true
	--/ fot debug:
	if st.log then log("set_scheme: Mob=[%s],scheme=[%s],section=[%s],gulag=[%s]", npc:name(), scheme, section, gulag_name, "") end --/#~#
end

function disable_scheme(npc, scheme)
	local stor = npc and db.storage[npc:id()]
	local st = stor and stor[scheme]
	if st then
		if st.log then log("disable_scheme:Mob=[%s],scheme=[%s]", npc:name(), scheme, "") end --/#~#
		xr_logic.unsubscribe_action_from_events(npc, st, st.action)
		st.enabled = false
	end
end
--/ -----------------------------------------------------------------------------------------------