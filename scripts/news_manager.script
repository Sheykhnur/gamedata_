--[[-----------------------------------------------------------------------------------------------
 File       : news_manager.script
 Description: Менеджер новостей
 Copyright  : 2004 © GSC Game World
 Author     : GSC Game World
 Last edit  : 21.06.18 (tomilovsenya) – fixed PDA messages
--]]-----------------------------------------------------------------------------------------------

--/ -----------------------------------------------------------------
--/ VARIABLEs
--/ -----------------------------------------------------------------
local SoundNameByTipId = {
	tutorial_flash_anomaly_alarm  	 = "characters_voice\\scenario\\trader\\trader_tutorial_anomalies_1",
	esc_return_dv                    = "characters_voice\\scenario\\trader\\return_from_dv",
	escape_fox_quest                 = "characters_voice\\scenario\\trader\\trader_pda_fox",
	tip_petruha_report               = "characters_voice\\scenario\\escape\\petruha_raport_p",
	
	tips_agr_krot_sos                = "characters_voice\\scenario\\agroprom\\krot_help_pda_1",
	tips_agr_krot_sos1               = "characters_voice\\scenario\\agroprom\\krot_help_pda_2",
	tips_agr_krot_sos2               = "characters_voice\\scenario\\agroprom\\krot_help_pda_2",
	tips_agr_stalker_help_1          = "characters_voice\\scenario\\agroprom\\stalker_help_1",
	tips_agr_stalker_help_2          = "characters_voice\\scenario\\agroprom\\stalker_help_2",
	--ghost_tips                     = "characters_voice\\scenario\\agroprom\\strelok_pda",
	--tips_agr_trader_documents      = "characters_voice\\scenario\\agroprom\\trader_pda_1",
	pass_to_1st_door                 = "characters_voice\\scenario\\val\\door1_password",
	pass_to_2nd_door                 = "characters_voice\\scenario\\val\\door2_password",
	
	
	bar_ecolog_crush_heli_down       = "characters_voice\\scenario\\Rostok\\Heli_crush\\wolfhound_pda_1",
	bar_freedom_attack_attract_actor = "characters_voice\\scenario\\Rostok\\Heli_crush\\wolfhound_pda_2",
	bar_freedom_spam_1               = "characters_voice\\scenario\\Rostok\\Heli_crush\\wolfhound_pda_6",
	bar_freedom_spam_2               = "characters_voice\\scenario\\Rostok\\Heli_crush\\wolfhound_pda_4",
	bar_freedom_spam_3               = "characters_voice\\scenario\\Rostok\\Heli_crush\\wolfhound_pda_3",
	bar_freedom_spam_4               = "characters_voice\\scenario\\Rostok\\Heli_crush\\wolfhound_pda_5",
	bar_freedom_attack               = "characters_voice\\scenario\\Rostok\\Heli_crush\\wolfhound_pda_7",
	bar_freedom_attack_spy           = "characters_voice\\scenario\\Rostok\\Heli_crush\\wolfhound_pda_8",
	bar_ecolog_crush_start_heli      = "characters_voice\\scenario\\Rostok\\Heli_crush\\kruglov_pda_1",
	bar_ecolog_crush_attract_actor   = "characters_voice\\scenario\\Rostok\\Heli_crush\\kruglov_pda_2",
	bar_ecolog_spam_1                = "characters_voice\\scenario\\Rostok\\Heli_crush\\kruglov_pda_3",
	bar_ecolog_spam_2                = "characters_voice\\scenario\\Rostok\\Heli_crush\\kruglov_pda_4",
	bar_ecolog_spam_3                = "characters_voice\\scenario\\Rostok\\Heli_crush\\kruglov_pda_5",
	bar_ecolog_spam_4                = "characters_voice\\scenario\\Rostok\\Heli_crush\\kruglov_pda_6",
	bar_ecolog_attack                = "characters_voice\\scenario\\Rostok\\Heli_crush\\kruglov_pda_7",
	rostok_kruglov_spam_1            = "characters_voice\\scenario\\Rostok\\kruglov_pda_help_1",
	rostok_kruglov_spam_2            = "characters_voice\\scenario\\Rostok\\kruglov_pda_help_3",
	bar_ecolog_escape                = "characters_voice\\scenario\\Rostok\\volkodav_pda_kruglov_escape_1",
	storyline_vasilyev_tip           = "characters_voice\\scenario\\yantar\\vasiliev_pda",
	storyline_ghost_tip              = "characters_voice\\scenario\\yantar\\ghost_pda",
	yan_saharov_message              = "characters_voice\\scenario\\yantar\\professor_to_actor_pda_3",
	yan_saharov_message_2            = "characters_voice\\scenario\\yantar\\professor_to_actor_pda_4",
	yan_saharov_message_3            = "characters_voice\\scenario\\yantar\\professor_to_actor_pda_5",
	
	yan_scientist_probe              = "characters_voice\\scenario\\yantar\\kruglov_radiation_quest_13",
	yan_scientist_probe_1            = "characters_voice\\scenario\\yantar\\kruglov_radiation_quest_11",
	yan_scientist_probe_2            = "characters_voice\\scenario\\yantar\\kruglov_radiation_quest_12",
	yan_scientist_probe_3            = "characters_voice\\scenario\\yantar\\kruglov_radiation_quest_6",
	
	rostok_kruglov_follow            = "characters_voice\\scenario\\Rostok\\pda_kruglov_help_6",
	bar_freedom_chase                = "characters_voice\\scenario\\Rostok\\pda_kruglov_stop_enemy_1",
	rostok_kruglov_follow_2          = "characters_voice\\scenario\\Rostok\\pda_kruglov_stop_enemy_2",
	rostok_kruglov_follow_3          = "characters_voice\\scenario\\Rostok\\pda_kruglov_help_5",
	
	bar_territory_dolg_1_hit         = "characters_voice\\scenario\\bar\\pda\\voronin_gunfire_pda_1",
	bar_territory_dolg_2_hit         = "characters_voice\\scenario\\bar\\pda\\voronin_gunfire_pda_2",
	bar_territory_dolg_3_hit         = "characters_voice\\scenario\\bar\\pda\\voronin_gunfire_pda_3",
	bar_territory_dolg_kill          = "characters_voice\\scenario\\bar\\pda\\voronin_gunfire_pda_4",
	
	tips_bun_komand                  = "characters_voice\\scenario\\bun\\patrol_prikaz",
	
	general_ecolog_tip_1             = "characters_voice\\scenario\\yantar\\professor_to_actor_pda_1",
	general_ecolog_tip_2             = "characters_voice\\scenario\\yantar\\professor_to_actor_pda_2",
	
	
	tips_gar_hellcar_alarm           = "characters_voice\\scenario\\garbage\\neutrals_commander_pda_1",
	gar_direction_fire               = "characters_voice\\scenario\\garbage\\junkyard_combat_ambush",
	gar_hellcar_victory              = "characters_voice\\scenario\\garbage\\junkyard_combat_end",
	gar_dolg_warning                 = "characters_voice\\scenario\\duty\\duty_warning1",
	gar_dolg_blokpost_warning        = "characters_voice\\scenario\\duty\\duty_warning1",
	gar_dolg_monster_rush            = "characters_voice\\scenario\\duty\\duty_request1",
	gar_actor_looser                 = "characters_voice\\scenario\\garbage\\duty_after_rush_bad",
	gar_actor_normal                 = "characters_voice\\scenario\\garbage\\duty_after_rush_normal",
	gar_actor_winner                 = "characters_voice\\scenario\\garbage\\duty_after_rush_good",
	
	esc_direction_fire               = "characters_voice\\scenario\\escape\\lager_fanat_attack",
	esc_fanat_victory                = "characters_voice\\scenario\\escape\\lager_fanat_victory",
	
	rad_barman_spam                  = "characters_voice\\scenario\\radar\\rad_barman_message",
	
	val_monolith_trader_pda1         = "characters_voice\\scenario\\val\\trader_dialog1",
	o_soznanie_text                  = "characters_voice\\scenario\\sarcofag\\o_soznanie_call",
	
	--/ dublicate pda sounds for remark scheme
	val_rob_leader_jeer_1            = "characters_voice\\scenario\\val\\rob_leader_jeer_1_p",
	--val_rob_leader_call            = "characters_voice\\scenario\\val\\rob_call_1_p",
	
	pri_followers_leader_phrase1_1   = "characters_voice\\scenario\\pri\\followers_leader_phrase1_1_p",
	pri_followers_leader_phrase1_2   = "characters_voice\\scenario\\pri\\followers_leader_phrase1_2_p",
	pri_followers_leader_phrase1_3   = "characters_voice\\scenario\\pri\\followers_leader_phrase1_3_p"
}

pda_tips = sound_object("device\\pda\\pda_tip")
pda_news = sound_object("device\\pda\\pda_news")
pda_task = sound_object("device\\pda\\pda_objective")

sounds = { --/#+#
	tips = pda_tips,
	news = pda_news,
	task = pda_task,
	sos  = sound_object("device\\pda\\pda_sos"),
	nosound = sound_object("$no_sound")
}

tips_icons = { --/ x, y
	default    = {   0, 658},
	actor	   = { 415, 940}, --/ Marked One
	stalker    = { 498, 470}, --/ Generic stalker
	sin        = { 498, 376},
	military   = { 498, 611}, --/ Military
	dolg       = {  498, 94},
	freedom    = {   0, 658},
	ecolog     = { 498,   0},
	killer     = {   0, 658}, --/ Mercs [same as "merc"]
	monolith   = { 498, 658},
	trader     = { 332, 893}, --/ Please use Sid instead
	barman     = { 332, 235}, --/ Barkeep aka Barman
	saharov    = { 332, 470},
	arena      = { 332, 141},
	wolf       = { 332, 940}, --/ Wolf
	seriy      = {   0, 940},
	novice     = {  498, 47}, --/ Generic novice stalker
	bes	       = { 249, 940}, --/ Bes
	krot       = { 332,  47}, --/ Mole
	petrenko   = { 498, 141}, --/ Petrenko
	hunter     = { 498, 799}, --/ Hunter
	contact    = { 415, 188}, --/ Military w/h contact
	o_soznanie = { 415, 893}, --/ An O-Soznanie scientist
	sid        = { 249, 611}, --/ Sidorovich
	doc        = { 498, 423}, --/ Doctor
	merc       = { 332, 517},
	lab        = { 332, 470}, --/ Sakharov
	veronin    = { 332, 423}, --/ Voronin
	ghost      = { 415, 705}, --/ Ghost
	fang       = { 498, 517}, --/ Fang
	grib       = { 332, 752}, --/ Griboyedov
	hermit     = { 332, 846}, --/ Hermit from the North hills
	nomad      = { 498, 705}, --/ Nomad from Radar
	zero       = {   0, 940},
	bandit     = { 498, 235},
	bandit2    = { 498, 188},
	gusarov    = { 498, 282},
	dima       = { 498, 846}, --/ Dima aka Dyomin from Rostok Factory
	veles      = { 498, 329},
	--/Items
	money      = {   0,   0},
	codedoor   = { 498, 564}, --/ Code-locked door
	safe       = { 498, 752}, --/ Safe
	merger     = {   0, 329},
	pda        = {   0, 752}
}
senders_icons = { --/#+#
	unknown  = { file = "ui\\ui_icon_equipment", rect = Frect():set(850, 800, 100,  50) }	
}
--/ --------------------------
local sModule = script_name()
--/ -----------------------------------------------------------------
local log = function(fmt,...) _G.log(sModule..":"..tostring(fmt),...) end
--/ -----------------------------------------------------------------
--/ Process (функции)
--/ -----------------------------------------------------------------
function send_tip(actor, text, timeOut_sec, sender_idx, timeShow_ms, sender_stopy_id)
	if not actor then actor = db.actor end
	if not (actor and type(text) == 'string') then return false end --/>
	if sender_stopy_id then  --log("send_tip: stopy_id=[%d]", sender_stopy_id, "") --/#~#
		local se_npc = alife():story_object(sender_stopy_id)
		if se_npc then
			--/ в онлайне проверяем на раненность, в других случаях только на смерть
			if se_npc.online then
				if xr_wounded.is_heavy_wounded_by_id(se_npc.id) then  --log("send_tip: sender is heavy wounded, tips=[%s]", text) --/#~#
					return false --/>
				end
			elseif se_npc.alive and se_npc:alive() then  --log("send_tip: sender is dead, tips=[%s]", text) --/#~#
				return false --/>
			end
		end
	end
	if type(timeOut_sec) ~= 'number' then timeOut_sec = 0 end
	if type(timeShow_ms) ~= 'number' then timeShow_ms = 5*1000 end
	--/ играем начальный дефолтный звук
	if not la_actor_sleep.is_sleep_active() then
		pda_tips:play(actor, timeOut_sec, sound_object.s2d)
	end
	--/ проверка наличия 'привязанного' звука
	local snd_obj = this.get_sound_news(text)
	if snd_obj then
		if not la_actor_sleep.is_sleep_active() then
			snd_obj:play(actor, timeOut_sec+1, sound_object.s2d) --/ играем забитый звук
		end
		timeShow_ms = math.max(timeShow_ms,snd_obj:length()) --/ ставим время по длине сцены
	end
	if type(sender_idx) ~= 'string' or not tips_icons[sender_idx] then
		sender_idx = "default"
	end
	local x,y = tips_icons[sender_idx][1],tips_icons[sender_idx][2]
	local uTexRect, sTexFile = Frect():set(x,y,83,47), "ui\\ui_iconsTotal"
	
	text = "%c[255,160,160,160]"..game.translate_string("st_tip").."\\n%c[default]"..game.translate_string(text)
--	log("send_tip: "..text) --/#~#
	actor:give_game_news(text, sTexFile, uTexRect, timeOut_sec*1000, timeShow_ms)
	return true
end
--/ ------------------------------------------------------------------
--/ Показ сообщения (типса) на основном или диалоговом экране
--/ ------------------------------------------------------------------
function send_tip_hud(sHeader, sText, sSender, iTimeShow, sSound)
	local oActor = db.actor
	if type(sText) ~= 'string' or not oActor then return end --/>
	if type(sHeader) ~= 'string' then sHeader = "st_tip" end
	if type(iTimeShow) ~= 'number' then iTimeShow = 7 end
	--/ играем звук(и)
	if not la_actor_sleep.is_sleep_active() then
		pda_tips:play(oActor, 0, sound_object.s2d) --/ играем начальный дефолтный звук
	end
	--/ проверяем наличие заданного звука или сценарного
	local snd_obj = sSound and sounds[sSound] or this.get_sound_news(sText)
	if snd_obj then
		if not la_actor_sleep.is_sleep_active() then
			snd_obj:play(oActor, 1, sound_object.s2d) --/ играем заданный звук
		end
		iTimeShow = math.max(iTimeShow,snd_obj:length()/1000) --/ корректируем время 'iTimeShow' по длине звука
	end
	--/ выбираем иконку
	local sTexFile, uTexRect = senders_icons.unknown.file, senders_icons.unknown.rect
	if sSender then
		if tips_icons[sSender] then
			sTexFile = "ui\\ui_iconsTotal"
			uTexRect = Frect():set(tips_icons[sSender][1],tips_icons[sSender][2],83,47)
		elseif senders_icons[sSender] then
			sTexFile, uTexRect = senders_icons[sSender].file, senders_icons[sSender].rect
		end
	end
	--/
	local sMsg = sHeader
	if sHeader ~= "" then
		sMsg = game.translate_string(sHeader)
		if not sMsg:match('^%%c%[(.+)') then
			sMsg = "%c[255,160,160,160]"..sMsg
		end
		if sText ~= "" then
			sMsg = sMsg.."%c[default]"..string.char(160).."\\n"..game.translate_string(sText)
		end
	else
		sMsg = game.translate_string(sText)
	end
	--/
	if oActor:is_talking() then
		oActor:give_talk_message(sMsg, sTexFile, uTexRect, "iconed_answer_item")
	else --/ give_game_news( LPCSTR news, LPCSTR texture_name, Frect, int time_out, int show_time )
		oActor:give_game_news(sMsg, sTexFile, uTexRect, 0, iTimeShow *1000)
	end
end

function send_tip_nosound(actor, sTipId, sSender)
	return this.get_sound_news(sTipId) --/>
end

function get_sound_news(sTipId)
	if sTipId and SoundNameByTipId[sTipId] then
		return xr_sound.get_safe_sound_object(SoundNameByTipId[sTipId]) --/>
	end
	return nil --/>
end

local tActionDescrByType = {
	new      = "general_new_task",      --/ "Новое задание:"
	update   = "general_update_task",   --/ "Задание обновлено:"
	complete = "general_complete_task", --/ "Задание выполнено:"
	fail     = "general_fail_task",   --/ "Задание провалено:"
	skipped  = "general_reserved_task"	--/ "Задание отменено"
}

function send_task(sTaskState, oTask, iObjective)
	local oActor = db.actor
	if not oActor then return false end --/>
	--/ играем дефолтный звук
	pda_task:play(oActor, 0, sound_object.s2d)
	--/ берем координаты из текстуры таска
	local sIcon = game.translate_string(oTask:get_objective(0):get_icon_name())
	local sTexFile, uTexRect = get_texture_info(sIcon, "ui_iconsTotal_locations")
	
	local sText = "%c[255,160,160,160]"..game.translate_string(tActionDescrByType[sTaskState]).."\\n".."%c[default]"..game.translate_string(oTask:get_title())
--	log("send_task:Text=[%s]", sText) --/#~#
	if oActor:is_talking() then
		oActor:give_talk_message(sText, sTexFile, uTexRect, "iconed_answer_item")
	else
		oActor:give_game_news(sText, sTexFile, uTexRect, 0, 5000)
	end
	if sTaskState == "new" or sTaskState == "update" then
		--/ проверка: выдано ли новое подзадание?
		if oTask:get_objectives_cnt() == iObjective+1 then
			return --/>
		end
		sText = game.translate_string(oTask:get_objective(iObjective+1):get_description())
	end
	--/ вывод сообщения на игровой экран (~5сек)
	local hud = get_hud()
	hud:AddCustomStatic("main_task", true)
	hud:GetCustomStatic("main_task"):wnd():SetTextST(sText)
	hud:GetCustomStatic("main_task").m_endTime = time_global()/1000 + 5
end

--[[ 
Article Types:
encyclopedia	= 0
journal			= 1
task			= 2
info			= 3

]]--

function send_encyclopedy(group, title, article_type)
	local oActor = db.actor
	
	if oActor then
		if article_type == 0 or article_type == 1 then
			local string_type -- Строка шапки сообщения
			
			if article_type == 0 then
				string_type = "st_found_new_article"
			elseif article_type == 1 then
				string_type = "st_found_new_info"
			end
		
			pda_news:play(oActor, 0, sound_object.s2d) -- играем дефолтный звук
			
			-- берем координаты из текстуры таска
			local sTexFile, uTexRect = get_texture_info("ui_iconsTotal_article", "ui_iconsTotal_article")
			local sText = "%c[255,160,160,160]"..game.translate_string(string_type)..string.char(160).."\\n".."%c[255,100,160,95]"..game.translate_string(title)
			--log("send_encyclopedy: %s %s : %s", group, title, sText)
			
			if oActor:is_talking() then
				oActor:give_talk_message(sText, sTexFile, uTexRect, "iconed_answer_item")
			else
				oActor:give_game_news(sText, sTexFile, uTexRect, 0, 5000)
			end
		end
	end
end

function send_treasure(sNameTreasure,id)
--arrakis_29
local tobj = alife():object(id)

	local lev = ""
	if game_graph():valid_vertex_id(tobj.m_game_vertex_id) then
	 lev = alife():level_name(game_graph():vertex(tobj.m_game_vertex_id):level_id())	
	end

	local oActor = db.actor
	if oActor and sNameTreasure and sNameTreasure ~= "" then
		--/ сообщение о тайнике
		pda_news:play(oActor, 0, sound_object.s2d) --/ играем дефолтный звук
	local sLvName = (lev and " %c[120,255,120,290]"..game.translate_string(lev)..":") or ""
		local sTreasureInfo = game.translate_string("st_found_new_treasure") --/ "Информация о схроне"
		local sText = "%c[255,160,160,160]"..sTreasureInfo.."\\n"..sLvName.." %c[170,200,200,200]\""..game.translate_string(sNameTreasure).."\"%c[default]"
		local sTexFile, uTexRect = get_texture_info("ui_iconsTotal_found_thing") --/ выбираем иконку
		if oActor:is_talking() then
			oActor:give_talk_message(sText, sTexFile, uTexRect, "iconed_answer_item")
		else
			oActor:give_game_news(sText, sTexFile, uTexRect, 0, 10000)
		end
--		log("%s:send_treasure:=[%s],Map=[%s]:[%s]", sModule, sNameTreasure, sLvName, "i") --/#~#
	else
		log("send_treasure:=[%s]~?,Map=[%s]:<%s>", sNameTreasure, sLvName, "Warning!")
	end
end

--/#+# инвентарное название объекта
function get_inv_name(sSection)
	return Get_InvName(sSection) --/ redirect
end

function relocate_item(oActor, sType, sSection, iQuantity)
	if not oActor then oActor = db.actor end
	if oActor and sType == "in" or sType == "out" then
		local sAction,sColor = "found", "%c[255,0,255,0]" --/ "%c[255,160,160,160]"
		if sType == "out" then
			sAction,sColor = "lost", "%c[255,255,0,0]"
		end
		local sTexFile,uTexRect = get_texture_info("ui_iconsTotal_"..sAction.."_thing")
		local sText = sColor..game.translate_string("general_"..sType.."_item").."\\n".."%c[default]"..game.translate_string(Get_InvName(sSection))
		if not iQuantity or iQuantity < 1 then iQuantity = 1 end
		sText = sText.." x "..tostring(iQuantity)
		if oActor:is_talking() then
			oActor:give_talk_message(sText, sTexFile, uTexRect, "iconed_answer_item")
		else
			oActor:give_game_news(sText, sTexFile, uTexRect, 0, 5000)
		end
	end
end

function relocate_money(oActor, sType, iAmount, oNPC)
	if not oActor then oActor = db.actor end
	if oActor and sType == "in" or sType == "out" then
		local sAction,sColor = "found", "• %c[255,128,255,128]"
		if sType == "out" then
			sAction,sColor = "lost", "• %c[255,255,120,160]"
		end
		local sTextInfo
		if oNPC then
			local sNameNPC = oNPC:character_name() or Get_CharName(oNPC)
			sTextInfo = game.translate_string("st_found_loot_money").." %c[120,255,120,160]"..sNameNPC --/ "взяты деньги с:" ...
		else
			sTextInfo = game.translate_string("general_"..sType.."_money") --/ "Получены деньги"
		end
		local sText = "%c[255,160,160,160]"..sTextInfo.."\\n"..sColor..tostring(iAmount).."%c[default] RUz"
		local sTexFile,uTexRect = get_texture_info("ui_iconsTotal_"..sAction.."_money") --/ иконка денег
		if oActor:is_talking() then
			oActor:give_talk_message(sText, sTexFile, uTexRect, "iconed_answer_item")
		else
			oActor:give_game_news(sText, sTexFile, uTexRect, 0, 5000)
		end
		game_stats.money_quest_update(iAmount, sType) --/#+# статистика
	end
end
--/ -----------------------------------------------------------------------------------------------